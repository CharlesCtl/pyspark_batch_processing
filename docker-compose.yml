version: '3.8'

services:
  spark-master: #The service name and alias for the network
    container_name: my-spark-master
    build: . #Build the image from the docker file in the current directory
    image: my-spark-image #Image build name will take
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./raw_data:/opt/spark/data #Binded volumes
      - ./spark_apps:/opt/spark/apps #Binded volumes
      - spark-warehouse:/opt/spark/spark-warehouse
      #- metastore_db:/opt/spark/metastore_db
      - spark-logs:/opt/spark/spark-events #Named volumes because of sparklogs
    env_file:
      - .env.spark
    ports: #Binds  the hostport / The container port
      - '9090:8080'
      - '7077:7077'
  
  spark-history-server:
    container_name: my-spark-history
    image: my-spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  spark-worker:
#    container_name: da-spark-worker
    image: my-spark-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./raw_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-warehouse:/opt/spark/spark-warehouse
      #- metastore_db:/opt/spark/metastore_db
      - spark-logs:/opt/spark/spark-events 

volumes:
  spark-logs: #This is the named volume
  spark-warehouse:
  metastore_db: